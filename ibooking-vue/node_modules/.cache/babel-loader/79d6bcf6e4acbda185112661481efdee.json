{"ast":null,"code":"import axios from 'axios';\nimport { Message, Loading } from 'element-ui';\nconst ConfigBaseURL = 'http://114.55.174.20:6992/'; //默认路径，这里也可以使用env来判断环境\n\nlet loadingInstance = null; //这里是loading\n//使用create方法创建axios实例\n\nexport const Service = axios.create({\n  timeout: 7000,\n  // 请求超时时间\n  baseURL: ConfigBaseURL,\n  method: 'post',\n  headers: {\n    'Content-Type': 'multipart/form-data;application/json;charset=UTF-8'\n  }\n}); // 添加请求拦截器\n\nService.interceptors.request.use(config => {\n  loadingInstance = Loading.service({\n    lock: true,\n    text: 'loading...'\n  });\n  return config;\n}); // 添加响应拦截器\n\nService.interceptors.response.use(response => {\n  loadingInstance.close(); // console.log(response)\n\n  return response.data;\n}, error => {\n  console.log('TCL: error', error);\n  const msg = error.Message !== undefined ? error.Message : '';\n  Message({\n    message: '网络错误' + msg,\n    type: 'error',\n    duration: 3 * 1000\n  });\n  loadingInstance.close();\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","Message","Loading","ConfigBaseURL","loadingInstance","Service","create","timeout","baseURL","method","headers","interceptors","request","use","config","service","lock","text","response","close","data","error","console","log","msg","undefined","message","type","duration","Promise","reject"],"sources":["C:/Users/Administrator/Desktop/vue-project/src/api/Service.js"],"sourcesContent":["import axios from 'axios'\r\nimport { Message, Loading } from 'element-ui'\r\nconst ConfigBaseURL = 'http://114.55.174.20:6992/' //默认路径，这里也可以使用env来判断环境\r\nlet loadingInstance = null //这里是loading\r\n//使用create方法创建axios实例\r\nexport const Service = axios.create({\r\n  timeout: 7000, // 请求超时时间\r\n  baseURL: ConfigBaseURL,\r\n  method: 'post',\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data;application/json;charset=UTF-8'\r\n  }\r\n})\r\n// 添加请求拦截器\r\nService.interceptors.request.use(config => {\r\n  loadingInstance = Loading.service({\r\n    lock: true,\r\n    text: 'loading...'\r\n  })\r\n  return config\r\n})\r\n// 添加响应拦截器\r\nService.interceptors.response.use(response => {\r\n  loadingInstance.close()\r\n  // console.log(response)\r\n  return response.data\r\n}, error => {\r\n  console.log('TCL: error', error)\r\n  const msg = error.Message !== undefined ? error.Message : ''\r\n  Message({\r\n    message: '网络错误' + msg,\r\n    type: 'error',\r\n    duration: 3 * 1000\r\n  })\r\n  loadingInstance.close()\r\n  return Promise.reject(error)\r\n})"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AACA,MAAMC,aAAa,GAAG,4BAAtB,C,CAAmD;;AACnD,IAAIC,eAAe,GAAG,IAAtB,C,CAA2B;AAC3B;;AACA,OAAO,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;EAClCC,OAAO,EAAE,IADyB;EACnB;EACfC,OAAO,EAAEL,aAFyB;EAGlCM,MAAM,EAAE,MAH0B;EAIlCC,OAAO,EAAE;IACP,gBAAgB;EADT;AAJyB,CAAb,CAAhB,C,CAQP;;AACAL,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiCC,MAAM,IAAI;EACzCV,eAAe,GAAGF,OAAO,CAACa,OAAR,CAAgB;IAChCC,IAAI,EAAE,IAD0B;IAEhCC,IAAI,EAAE;EAF0B,CAAhB,CAAlB;EAIA,OAAOH,MAAP;AACD,CAND,E,CAOA;;AACAT,OAAO,CAACM,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CAAkCK,QAAQ,IAAI;EAC5Cd,eAAe,CAACe,KAAhB,GAD4C,CAE5C;;EACA,OAAOD,QAAQ,CAACE,IAAhB;AACD,CAJD,EAIGC,KAAK,IAAI;EACVC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;EACA,MAAMG,GAAG,GAAGH,KAAK,CAACpB,OAAN,KAAkBwB,SAAlB,GAA8BJ,KAAK,CAACpB,OAApC,GAA8C,EAA1D;EACAA,OAAO,CAAC;IACNyB,OAAO,EAAE,SAASF,GADZ;IAENG,IAAI,EAAE,OAFA;IAGNC,QAAQ,EAAE,IAAI;EAHR,CAAD,CAAP;EAKAxB,eAAe,CAACe,KAAhB;EACA,OAAOU,OAAO,CAACC,MAAR,CAAeT,KAAf,CAAP;AACD,CAdD"},"metadata":{},"sourceType":"module"}