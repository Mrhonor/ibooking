{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport leftMenu from './left-menu.vue';\nimport { mapActions } from \"vuex\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  components: {\n    leftMenu\n  },\n\n  beforeUpdate() {\n    this.activeIndex = this.$route.path;\n  },\n\n  data() {\n    return {\n      activeIndex: \"\",\n      // 头部导航栏选中的标签\n      search: \"\",\n      // 搜索条件\n      register: false,\n      // 是否显示注册组件\n      visible: false // 是否退出登录\n\n    };\n  },\n\n  created() {\n    // 获取浏览器localStorage，判断用户是否已经登录\n    if (localStorage.getItem(\"user\")) {\n      // 如果已经登录，设置vuex登录状态\n      this.setUser(JSON.parse(localStorage.getItem(\"user\")));\n    }\n  },\n\n  computed: { ...mapGetters([\"getUser\", \"getNum\"])\n  },\n  watch: {\n    // 获取vuex的登录状态\n    getUser: function (val) {\n      if (val === \"\") {\n        // 用户没有登录\n        this.setShoppingCart([]);\n      } else {\n        // 用户已经登录,获取该用户的购物车信息\n        this.$axios.post(\"/api/user/shoppingCart/getShoppingCart\", {\n          user_id: val.user_id\n        }).then(res => {\n          if (res.data.code === \"001\") {\n            // 001 为成功, 更新vuex购物车状态\n            this.setShoppingCart(res.data.shoppingCartData);\n          } else {\n            // 提示失败信息\n            this.notifyError(res.data.msg);\n          }\n        }).catch(err => {\n          return Promise.reject(err);\n        });\n      }\n    }\n  },\n  methods: { ...mapActions([\"setUser\", \"setShowLogin\", \"setShoppingCart\"]),\n\n    login() {\n      // 点击登录按钮, 通过更改vuex的showLogin值显示登录组件\n      this.setShowLogin(true);\n    },\n\n    // 退出登录\n    logout() {\n      this.visible = false; // 清空本地登录信息\n\n      localStorage.setItem(\"user\", \"\"); // 清空vuex登录信息\n\n      this.setUser(\"\");\n      this.notifySucceed(\"成功退出登录\");\n    },\n\n    // 接收注册子组件传过来的数据\n    isRegister(val) {\n      this.register = val;\n    },\n\n    // 点击搜索按钮\n    searchClick() {\n      if (this.search != \"\") {\n        // 跳转到全部商品页面,并传递搜索条件\n        this.$router.push({\n          path: \"/goods\",\n          query: {\n            search: this.search\n          }\n        });\n        this.search = \"\";\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AAEA;EACAA;IACAC;EADA,CADA;;EAIAC;IACA;EACA,CANA;;EAOAC;IACA;MACAC,eADA;MACA;MACAC,UAFA;MAEA;MACAC,eAHA;MAGA;MACAC,cAJA,CAIA;;IAJA;EAMA,CAdA;;EAeAC;IACA;IACA;MACA;MACA;IACA;EAEA,CAtBA;;EAuBAC,YACA;EADA,CAvBA;EA0BAC;IACA;IACAC;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA,YACAC,IADA,CACA,wCADA,EACA;UACAC;QADA,CADA,EAIAC,IAJA,CAIAC;UACA;YACA;YACA;UACA,CAHA,MAGA;YACA;YACA;UACA;QACA,CAZA,EAaAC,KAbA,CAaAC;UACA;QACA,CAfA;MAgBA;IACA;EAzBA,CA1BA;EAqDAC,WACA,6DADA;;IAEAC;MACA;MACA;IACA,CALA;;IAMA;IACAC;MACA,qBADA,CAEA;;MACAC,iCAHA,CAIA;;MACA;MACA;IACA,CAdA;;IAeA;IACAC;MACA;IACA,CAlBA;;IAmBA;IACAC;MACA;QACA;QACA;UAAAC;UAAAC;YAAApB;UAAA;QAAA;QACA;MACA;IACA;;EA1BA;AArDA","names":["components","leftMenu","beforeUpdate","data","activeIndex","search","register","visible","created","computed","watch","getUser","post","user_id","then","res","catch","err","methods","login","logout","localStorage","isRegister","searchClick","path","query"],"sourceRoot":"src/components","sources":["layout-page.vue"],"sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <el-container>\r\n      <el-header>\r\n        <div style=\"float:left;font-weight: bold;\">\r\n          用户管理系统\r\n        </div>\r\n        <div style=\"float:right\">\r\n          <ul>\r\n            <li v-if=\"!this.$store\">\r\n              <el-button type=\"text\" @click=\"login\">登录</el-button>\r\n              <span class=\"sep\">|</span>\r\n              <el-button type=\"text\" @click=\"register = true\">注册</el-button>\r\n            </li>\r\n            <li v-else>\r\n              欢迎\r\n              <el-popover placement=\"top\" width=\"180\" v-model=\"visible\">\r\n                <p>确定退出登录吗？</p>\r\n                <div style=\"text-align: right; margin: 10px 0 0\">\r\n                  <el-button size=\"mini\" type=\"text\" @click=\"visible = false\">取消</el-button>\r\n                  <el-button type=\"primary\" size=\"mini\" @click=\"logout\">确定</el-button>\r\n                </div>\r\n                <el-button type=\"text\" slot=\"reference\">{{ this.$store.getters.getUser.userName }}</el-button>\r\n              </el-popover>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </el-header>\r\n      <el-container>\r\n        <el-aside width=\"200px\">\r\n          <left-menu></left-menu>\r\n        </el-aside>\r\n        <el-container>\r\n          <el-main>\r\n            <slot></slot>\r\n          </el-main>\r\n        </el-container>\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n<script>\r\nimport leftMenu from './left-menu.vue'\r\nimport { mapActions } from \"vuex\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default ({\r\n  components: {\r\n    leftMenu,\r\n  },\r\n   beforeUpdate() {\r\n    this.activeIndex = this.$route.path;\r\n  },\r\n  data() {\r\n    return {\r\n      activeIndex: \"\", // 头部导航栏选中的标签\r\n      search: \"\", // 搜索条件\r\n      register: false, // 是否显示注册组件\r\n      visible: false // 是否退出登录\r\n    };\r\n  },\r\n  created() {\r\n    // 获取浏览器localStorage，判断用户是否已经登录\r\n    if (localStorage.getItem(\"user\")) {\r\n      // 如果已经登录，设置vuex登录状态\r\n      this.setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n    }\r\n \r\n  },\r\n  computed: {\r\n    ...mapGetters([\"getUser\", \"getNum\"])\r\n  },\r\n  watch: {\r\n    // 获取vuex的登录状态\r\n    getUser: function(val) {\r\n      if (val === \"\") {\r\n        // 用户没有登录\r\n        this.setShoppingCart([]);\r\n      } else {\r\n        // 用户已经登录,获取该用户的购物车信息\r\n        this.$axios\r\n          .post(\"/api/user/shoppingCart/getShoppingCart\", {\r\n            user_id: val.user_id\r\n          })\r\n          .then(res => {\r\n            if (res.data.code === \"001\") {\r\n              // 001 为成功, 更新vuex购物车状态\r\n              this.setShoppingCart(res.data.shoppingCartData);\r\n            } else {\r\n              // 提示失败信息\r\n              this.notifyError(res.data.msg);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            return Promise.reject(err);\r\n          });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions([\"setUser\", \"setShowLogin\", \"setShoppingCart\"]),\r\n    login() {\r\n      // 点击登录按钮, 通过更改vuex的showLogin值显示登录组件\r\n      this.setShowLogin(true);\r\n    },\r\n    // 退出登录\r\n    logout() {\r\n      this.visible = false;\r\n      // 清空本地登录信息\r\n      localStorage.setItem(\"user\", \"\");\r\n      // 清空vuex登录信息\r\n      this.setUser(\"\");\r\n      this.notifySucceed(\"成功退出登录\");\r\n    },\r\n    // 接收注册子组件传过来的数据\r\n    isRegister(val) {\r\n      this.register = val;\r\n    },\r\n    // 点击搜索按钮\r\n    searchClick() {\r\n      if (this.search != \"\") {\r\n        // 跳转到全部商品页面,并传递搜索条件\r\n        this.$router.push({ path: \"/goods\", query: { search: this.search } });\r\n        this.search = \"\";\r\n      }\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.layout,\r\n.el-container {\r\n  height: 100%;\r\n}\r\n.el-button--text{\r\n  color: #000;\r\n}\r\n\r\n.el-header,\r\n.el-footer {\r\n  background-color: #B3C0D1;\r\n  color: #333;\r\n  text-align: center;\r\n  line-height: 60px;\r\n}\r\n\r\n.el-aside {\r\n  background-color: #D3DCE6;\r\n  color: #333;\r\n  text-align: center;\r\n  line-height: 200px;\r\n}\r\n\r\nbody>.el-container {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.el-container:nth-child(5) .el-aside,\r\n.el-container:nth-child(6) .el-aside {\r\n  line-height: 260px;\r\n}\r\n\r\n.el-container:nth-child(7) .el-aside {\r\n  line-height: 320px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}