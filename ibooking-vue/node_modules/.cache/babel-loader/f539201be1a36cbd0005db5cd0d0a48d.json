{"ast":null,"code":"import axios from 'axios'; // import { Message, Loading } from 'element-ui'\n\nconst ConfigBaseURL = 'http://127.0.0.1:8090/'; //默认路径，这里也可以使用env来判断环境\n// let loadingInstance = null //这里是loading\n//使用create方法创建axios实例\n\nexport const Service = axios.create({\n  timeout: 7000,\n  // 请求超时时间\n  baseURL: ConfigBaseURL,\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json;charset:utf-8;'\n  }\n}); // 添加请求拦截器\n// Service.interceptors.request.use(config => {\n//   loadingInstance = Loading.service({\n//     lock: true,\n//     text: 'loading...'\n//   })\n//   return config\n// })\n// // 添加响应拦截器\n// Service.interceptors.response.use(response => {\n//   loadingInstance.close()\n//   // console.log(response)\n//   return response.data\n// }, error => {\n//   console.log('TCL: error', error)\n//   const msg = error.Message !== undefined ? error.Message : ''\n//   Message({\n//     message: '网络错误' + msg,\n//     type: 'error',\n//     duration: 3 * 1000\n//   })\n//   loadingInstance.close()\n//   return Promise.reject(error)\n// })","map":{"version":3,"names":["axios","ConfigBaseURL","Service","create","timeout","baseURL","method","headers"],"sources":["D:/y1/8 软件过程管理/vuelibrary/vue-library/vue-library/src/api/Service.js"],"sourcesContent":["import axios from 'axios'\r\n// import { Message, Loading } from 'element-ui'\r\nconst ConfigBaseURL = 'http://127.0.0.1:8090/' //默认路径，这里也可以使用env来判断环境\r\n// let loadingInstance = null //这里是loading\r\n//使用create方法创建axios实例\r\nexport const Service = axios.create({\r\n  timeout: 7000, // 请求超时时间\r\n  baseURL: ConfigBaseURL,\r\n  method: 'post',\r\n  headers: {\r\n    'Content-Type': 'application/json;charset:utf-8;'\r\n  }\r\n})\r\n// 添加请求拦截器\r\n// Service.interceptors.request.use(config => {\r\n//   loadingInstance = Loading.service({\r\n//     lock: true,\r\n//     text: 'loading...'\r\n//   })\r\n//   return config\r\n// })\r\n// // 添加响应拦截器\r\n// Service.interceptors.response.use(response => {\r\n//   loadingInstance.close()\r\n//   // console.log(response)\r\n//   return response.data\r\n// }, error => {\r\n//   console.log('TCL: error', error)\r\n//   const msg = error.Message !== undefined ? error.Message : ''\r\n//   Message({\r\n//     message: '网络错误' + msg,\r\n//     type: 'error',\r\n//     duration: 3 * 1000\r\n//   })\r\n//   loadingInstance.close()\r\n//   return Promise.reject(error)\r\n// })"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,aAAa,GAAG,wBAAtB,C,CAA+C;AAC/C;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;EAClCC,OAAO,EAAE,IADyB;EACnB;EACfC,OAAO,EAAEJ,aAFyB;EAGlCK,MAAM,EAAE,MAH0B;EAIlCC,OAAO,EAAE;IACP,gBAAgB;EADT;AAJyB,CAAb,CAAhB,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}